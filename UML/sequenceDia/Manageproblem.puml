@startuml login

actor Administrator as a 
participant Web as web

participant ProblemService as cs

activate web

a -> web: click "Management"
activate cs
web -> cs : getProlemList()
cs -> web : returnProblemList()
deactivate cs
web -> a: displayManagementPage()

alt if click "add problem"
a -> web : click "add problem"
web ->a : displayProblemForm()
a->web:inputProblemInfo()
a->web:click "create"
activate cs
web -> cs : submitProblemForm()
cs->cs:problemCreate()
cs->web:returnCreateStatus()
deactivate cs
web->a:displayCreateStatus()

else if click "delete problem"
a -> web : click "delete problem"
web->a:displayHint()
alt if click "yes"
a ->web: click "yes"
activate cs
web -> cs: requestDelete()
cs ->cs:problemDelete()
cs->web:returnDeleteStatus()
deactivate cs
web->a:displayDeleteStatus()
else if click "no"
a ->web: click "no"
web -> a :cancelHint()
end

else if click "modify problem"
a -> web : click "modify problem"
activate cs
web -> cs : getProlemDetail()
cs -> web : returnProblemDetail()
deactivate cs
web ->a : displayproblemForm()
a->web:inputNewInfo()
a->web:click "modify" 
activate cs
web ->cs : submitProblemForm()
cs->cs:problemModify()
cs->web:returnModifyStatus()
deactivate cs
web->a:displayModifyStatus()

end

deactivate web

@enduml